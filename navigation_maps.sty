\ProvidesPackage{navigation_maps}

\RequirePackage{pgf, pgfkeys, tikz}

% Compare strings
\RequirePackage{etoolbox}

% Save min and max values for x and y direction
\pgfkeys{
    /xMin/.is family,
    /xMin/deg/.initial=0,
    /xMin/min/.initial=0,
}

\pgfkeys{
    /xMax/.is family,
    /xMax/deg/.initial=0,
    /xMax/min/.initial=0,
}

\pgfkeys{
    /yMin/.is family,
    /yMin/deg/.initial=0,
    /yMin/min/.initial=0,
}

\pgfkeys{
    /yMax/.is family,
    /yMax/deg/.initial=0,
    /yMax/min/.initial=0,
}


% Arguments: x/y-Axis, axis diff, axis min, axis max
\newcommand{\navAxisSetup}[4]{
    \edef\navIsXAxis{#1} % 0: x-Axis, other y-Axis
    \edef\navAxisDiff{#2}
    \edef\navAxisMin{#3}
    \edef\navAxisMax{#4}

    % Check 5 step increments
    \pgfmathsetmacro{\minMinInc}{int(\navAxisMin / 25)}
    \pgfmathsetmacro{\minMaxInc}{int(\navAxisMax / 25)}
    \pgfmathsetmacro{\minDiff}{\minMaxInc - \minMinInc}

    \foreach \i in {0, ..., \navAxisDiff}{
        \pgfmathparse{\i}
        \ifnum \pgfmathresult>0

            % Check x/y-Axis
            \pgfmathparse{\navIsXAxis}
            \ifnum \pgfmathresult=0
                \draw (\i - 1, -\navBarSize) rectangle (\i, 0);
            \else
                \draw (-\navBarSize, \i - 1) rectangle (0, \i);
            \fi
        \fi

        \pgfmathsetmacro{\Xstart}{\i + \navAxisMin}
        \pgfmathsetmacro{\currDeg}{int((\i + \navAxisMin) / (60 * 5))}


        % Check for degrees
        \pgfmathsetmacro{\countA}{int(\Xstart / (5 * 60))}
        \pgfmathsetmacro{\countB}{int(5 * 60 * \countA)}
        \pgfmathsetmacro{\DegreeOverlap}{\Xstart - \countB}

        % Show degrees
        \pgfmathparse{int(\DegreeOverlap)}
        \ifnum \pgfmathresult=0
            % Check x/y-Axis
            \pgfmathparse{\navIsXAxis}
            \ifnum \pgfmathresult=0
                \draw[blue] (\i, 0) -- (\i, -\navNumberOffset) node[anchor=north]{\currDeg $^{\circ}$};
            \else
                \draw[blue] (0, \i) -- (-\navNumberOffset, \i) node[anchor=east]{\currDeg $^{\circ}$};
            \fi


        \else
            % Check for minutes
            % Create a mark for every minute
            \pgfmathsetmacro{\minStepSize}{5}
            \navShowMin{}

            \pgfmathparse{int(\minDiff)}
            \ifnum \pgfmathresult>0
                \pgfmathsetmacro{\minStepSize}{5 * 5}
            \fi

            % Show minutes (numbers)
            \navShowMin{\currMin '}
        \fi
    }

    \pgfmathsetmacro{\xCenter}{int(\navAxisDiff / 2)}

    % Set at least one degree value
    \pgfmathsetmacro{\countA}{int(\navAxisMin / (5 * 60))}
    \pgfmathsetmacro{\countB}{int(\navAxisMax / (5 * 60))}
    \pgfmathsetmacro{\DegreeTotalOverlap}{int(\countB - \countA)}

    \pgfmathparse{int(\DegreeTotalOverlap)}
    \ifnum \pgfmathresult=0
        \pgfmathsetmacro{\currDeg}{int(\navAxisMin / (60 * 5))}

        % Check x/y-Axis
        \pgfmathparse{\navIsXAxis}
        \ifnum \pgfmathresult=0
            \draw[black] (\xCenter, -6) node[anchor=north]{\currDeg $^{\circ}$};
        \else
            \draw[black] (-6, \xCenter) node[anchor=east]{\currDeg $^{\circ}$};
        \fi
    \fi
}

\newcommand{\navShowMin}[1]{
    \pgfmathsetmacro{\countOverlapA}{int(\Xstart / \minStepSize)}
    \pgfmathsetmacro{\countOverlapB}{int(\countOverlapA * \minStepSize)}
    \pgfmathsetmacro{\MinOverlap}{\Xstart - \countOverlapB}

    \pgfmathparse{int(\MinOverlap)}
    \ifnum \pgfmathresult=0
        \pgfmathsetmacro{\currMin}{int(int((\i + \navAxisMin) / 5) - (\currDeg * 60))}

        % Check x/y-Axis
        \pgfmathparse{\navIsXAxis}
        \ifnum \pgfmathresult=0
            \draw[black] (\i, 0) -- (\i, -2) node[anchor=north]{#1};
        \else
            \draw[black] (0, \i) -- (-2, \i) node[anchor=east]{#1};
        \fi
    \fi
}

% Arguments: yMin, yMax, xMin, xMax, figure scaling
\newenvironment{nav_map}[5]
% Run at the start
{
    \pgfqkeys{/yMin}{#1}
    \pgfqkeys{/yMax}{#2}
    \pgfqkeys{/xMin}{#3}
    \pgfqkeys{/xMax}{#4}

    \newcommand{\navBarSize}{0.5}
    \newcommand{\navNumberOffset}{4}

    \edef\navScaling{#5}

    \begin{tikzpicture}[scale=\navScaling]
        % 1 Degree is divided into 60 minutes
        % 1 minute is divided into 5 blocks

        \pgfmathsetmacro{\xMin}{(\pgfkeysvalueof{/xMin/deg} * 60 * 5) + (\pgfkeysvalueof{/xMin/min} * 5)}
        \pgfmathsetmacro{\xMax}{(\pgfkeysvalueof{/xMax/deg} * 60 * 5) + (\pgfkeysvalueof{/xMax/min} * 5)}
        \pgfmathsetmacro{\xDiff}{\xMax - \xMin}

        \pgfmathsetmacro{\yMin}{(\pgfkeysvalueof{/yMin/deg} * 60 * 5) + (\pgfkeysvalueof{/yMin/min} * 5)}
        \pgfmathsetmacro{\yMax}{(\pgfkeysvalueof{/yMax/deg} * 60 * 5) + (\pgfkeysvalueof{/yMax/min} * 5)}
        \pgfmathsetmacro{\yDiff}{\yMax - \yMin}

        % Draw bounding rectangle
        \draw (0, 0) rectangle (\xDiff, \yDiff);


        % -----------------------------------------
        % x Axis
        \navAxisSetup{0}{\xDiff}{\xMin}{\xMax}

        % -----------------------------------------
        % y Axis
        \navAxisSetup{1}{\yDiff}{\yMin}{\yMax}
}
% Run at the end
{
    \end{tikzpicture}
}

\pgfkeys{
    /navConvertCoord/.is family,
    /navConvertCoord/deg/.initial=0,
    /navConvertCoord/min/.initial=0,
    /navConvertCoord/sec/.initial=0,
    /navConvertCoord/x/.initial=0,
    /navConvertCoord/y/.initial=0,
}

% Arguments: isXAxis (x: 0, y: 1), Coords
\newcommand{\navConvertCoords}[2]{
    \pgfkeys{/navConvertCoord/.cd, #2}

    \pgfmathparse{#1}
    \ifnum \pgfmathresult=0
        \pgfmathsetmacro{\xMinConv}{\pgfkeysvalueof{/xMin/deg} * 60 * 5 + \pgfkeysvalueof{/xMin/min} * 5}
        \pgfmathsetmacro{\xRelativeConv}{\pgfkeysvalueof{/navConvertCoord/deg} * 60 * 5 + \pgfkeysvalueof{/navConvertCoord/min} * 5 + \pgfkeysvalueof{/navConvertCoord/sec} / 12 - \xMinConv}

        \pgfkeyssetvalue{/navConvertCoord/x}{\xRelativeConv}
    \else
        \pgfmathsetmacro{\yMinConv}{\pgfkeysvalueof{/yMin/deg} * 60 * 5 + \pgfkeysvalueof{/yMin/min} * 5}
        \pgfmathsetmacro{\yRelativeConv}{\pgfkeysvalueof{/navConvertCoord/deg} * 60 * 5 + \pgfkeysvalueof{/navConvertCoord/min} * 5 + \pgfkeysvalueof{/navConvertCoord/sec} / 12 - \yMinConv}

        \pgfkeyssetvalue{/navConvertCoord/y}{\yRelativeConv}
    \fi
}


% Return the key value from previous coord calculation
\newcommand{\navGetAxis}[1]{
    \pgfkeysvalueof{/navConvertCoord/#1}
}


\pgfkeys{
    /navSymbolSettings/.is family,
    /navSymbolSettings/x/.initial=0,
    /navSymbolSettings/y/.initial=0,
    /navSymbolSettings/scaling/.initial=1,
    /navSymbolSettings/option/.initial=0
}

% Arguments: navSymbolSettings
\newcommand{\navMarkPosition}[1]{
    \pgfkeys{/navSymbolSettings/.cd, #1}
    \edef\navPosX{\pgfkeysvalueof{/navSymbolSettings/x}}
    \edef\navPosY{\pgfkeysvalueof{/navSymbolSettings/y}}
    \edef\navPosS{\pgfkeysvalueof{/navSymbolSettings/scaling} * 0.5}

    % Location position
    \draw[fill=white] (\navPosX, \navPosY) circle (0.5 * \navPosS);
    \draw (-1.25 * \navPosS + \navPosX, -1.25 * \navPosS + \navPosY) -- (1.25 * \navPosS + \navPosX, 1.25 * \navPosS + \navPosY);
    \draw (-1.25 * \navPosS + \navPosX, 1.25 * \navPosS + \navPosY) -- (1.25 * \navPosS + \navPosX, -1.25 * \navPosS + \navPosY);

}

\pgfkeys{
    /markOptions/.is family,
    % Buoy options: pillar, conical, cylindrical, spherical, ..
    /markOptions/buoy/.store in = \navBuoyOption,
    /markOptions/buoyArea/.store in = \navBuoyArea,
    % cardinalmarks (north, east, south, west), circle (ball), triangle, box (cylinder)
    /markOptions/top/.store in = \navTopMarkings,
    /markOptions/topArea/.store in = \navTopArea,
    /markOptions/x/.initial=0,
    /markOptions/y/.initial=0,
    /markOptions/lightSide/.store in = \navLightSide,
    /markOptions/lightColor/.store in = \navLightColor,
    /markOptions/scaling/.initial=1,
}


% Arguments: navSymbolSettings, markOptions
\newcommand{\navMarks}[2]{
    % Set general navSymbol keys
    \pgfkeys{/navSymbolSettings/.cd, #1}
    \edef\navX{\pgfkeysvalueof{/navSymbolSettings/x}}
    \edef\navY{\pgfkeysvalueof{/navSymbolSettings/y}}
    \edef\navS{\pgfkeysvalueof{/navSymbolSettings/scaling} * 0.5}


    % Set specific mark keys
    % Initial values
    \pgfkeys{/markOptions/.cd, buoy=pillar, buoyArea=, top=, topArea=, scaling=\navS, lightSide=, lightColor=white}
    \pgfkeys{/markOptions/.cd, #2}

    % Replace white light color with yellow
    \ifdefstring{\navLightColor}{white}{
        \pgfkeys{/markOptions/.cd, lightColor=yellow}
    }

    % Marking/Buoy options
    % Pillar buoy:
    \ifdefstring{\navBuoyOption}{pillar}{
        \navPillarBuoy{\navY}{\navX}{\navS}
    }

    % Conical bouy:
    \ifdefstring{\navBuoyOption}{conical}{
        \navConicalBuoy{\navY}{\navX}{\navS}
    }

    % Cylindircal bouy:
    \ifdefstring{\navBuoyOption}{cylindrical}{
        \navCylindricalBuoy{\navY}{\navX}{\navS}
    }

    % Spherical buoy
    \ifdefstring{\navBuoyOption}{spherical}{
        \navSphericalBuoy{\navY}{\navX}{\navS}
    }

    % Spar buoy
    \ifdefstring{\navBuoyOption}{sparbuoy}{
        \navSparBuoy{\navY}{\navX}{\navS}
    }

    % Barrel buoy
    \ifdefstring{\navBuoyOption}{barrelbuoy}{
        \navBarrelBuoy{\navY}{\navX}{\navS}
    }

    % Superbuoy
    \ifdefstring{\navBuoyOption}{superbuoy}{
        \navSuperBuoy{\navY}{\navX}{\navS}
    }

    % Mooring buoy
    \ifdefstring{\navBuoyOption}{mooringbuoy}{
        \navBarrelBuoy{\navY}{\navX}{\navS}

        \pgfkeys{/markOptions/.cd, x=\navX - 0.5 * \navS, y=\navY + 1.35 * \navS, scaling=\navS * 0.5, top=circle}
        \navTopMark
    }

    % Location position
    \draw[fill=white] (\navX, \navY) circle (0.5 * \navS);

    % Lighted marks
    \ifdefstring{\navLightSide}{left}{
        \navLightedMarkLeft{\navY}{\navX}{\navS}{\navLightColor}
    }

    \ifdefstring{\navLightSide}{right}{
        \navLightedMarkRight{\navY}{\navX}{\navS}{\navLightColor}
    }

    % LightHouse
    \ifdefstring{\navBuoyOption}{lighthouse}{
        \navLightHouse{\navY}{\navX}{\navS}

        \ifdefstring{\navTopArea}{fill}{
            \draw[fill] (\navX, \navY) circle (0.5 * \navS);
        }
    }

}

% Draw markings/buoys
\newcommand{\navPillarBuoy}[3]{
    \edef\navPillarY{#1}
    \edef\navPillarX{#2}
    \edef\navPillarS{#3}

    % Right side
    \draw[\navBuoyArea] (2.5 * \navPillarS + \navPillarX, \navPillarY) -- (1.9 * \navPillarS + \navPillarX, \navPillarY) -- (1.5 * \navPillarS + \navPillarX, 1.8 * \navPillarS + \navPillarY) -- (2.2 * \navPillarS + \navPillarX, 6 * \navPillarS + \navPillarY) --
    % Left Side
    (1.1 * \navPillarS + \navPillarX, 6.3 * \navPillarS + \navPillarY) -- (-0.4 * \navPillarS + \navPillarX, 2.4 * \navPillarS + \navPillarY) -- (-1.9 * \navPillarS + \navPillarX, \navPillarY) -- (-2.5 * \navPillarS + \navPillarX, \navPillarY) -- cycle;


    % Mid line
    \path[draw] (\navPillarX, 0.5 * \navPillarS + \navPillarY) -- (1.65 * \navPillarS + \navPillarX, 6.15 * \navPillarS  + \navPillarY);


    \pgfkeys{/markOptions/.cd, x=\navPillarX + 1.65 * \navPillarS + 0.29 \navPillarS, y=\navPillarY + 6.15 * \navPillarS + 1.17 * \navPillarS}
    \navTopMark

}

\newcommand{\navConicalBuoy}[3]{
    \edef\navConicalY{#1}
    \edef\navConicalX{#2}
    \edef\navConicalS{#3}

    % Left side
    \draw[\navBuoyArea] (-1.55 * \navConicalS + \navConicalX, \navConicalY) -- (-1.3 * \navConicalS + \navConicalX, \navConicalY) --
    % Right side
    (0.6 * \navConicalS + \navConicalX, 2.5 * \navConicalS + \navConicalY) -- (1.25 * \navConicalS + \navConicalX, \navConicalY) -- (1.55 * \navConicalS + \navConicalX, \navConicalY) -- cycle;

    \pgfkeys{/markOptions/.cd, x=\navConicalX + 1.2 \navConicalS, y=\navConicalY + 5 * \navConicalS}
    \navTopMark

}

\newcommand{\navCylindricalBuoy}[3]{
    \edef\navCylinY{#1}
    \edef\navCylinX{#2}
    \edef\navCylinS{#3}

    % Left side
    \draw[\navBuoyArea] (-1.75 * \navCylinS + \navCylinX, \navCylinY) -- (-1.4 * \navCylinS + \navCylinX, \navCylinY) -- (-1 * \navCylinS + \navCylinX, 1.85 * \navCylinS + \navCylinY) --
    % Right side
    (1.6 * \navCylinS + \navCylinX, 1.25 * \navCylinS + \navCylinY) -- (1.3 * \navCylinS + \navCylinX, \navCylinY) -- (1.75 * \navCylinS + \navCylinX, \navCylinY) -- cycle;

    \pgfkeys{/markOptions/.cd, x=\navCylinX + 0.5 \navCylinS, y=\navCylinY + 3 * \navCylinS}
    \navTopMark

}

\newcommand{\navSphericalBuoy}[3]{
    \edef\navSphereY{#1}
    \edef\navSphereX{#2}
    \edef\navSphereS{#3}

    \coordinate (CircleCenter) at (0.15 * \navSphereS + \navSphereX, 0.7 * \navSphereS + \navSphereY);

    \coordinate (Start) at (0.15 * \navSphereS + \navSphereX + 1.532 * \navSphereS, \navSphereY);
    % \coordinate (End) at (0.15 * \navSphereS + \navSphereX - 1.532 * \navSphereS, \navSphereY);

    \coordinate (Left) at (-2 * \navSphereS + \navSphereX, \navSphereY);
    \coordinate (Right) at (2.5 * \navSphereS + \navSphereX, \navSphereY);

    % Bottom
    \draw (Left) -- (Right);

    % Circle
    \draw (Start) arc[start angle=-40, end angle=220, radius=\navSphereS * 2cm];

    % Mid line
    \path[draw] (\navSphereX, 0.5 * \navSphereS + \navSphereY) -- (1 * \navSphereS + \navSphereX, 3.1 * \navSphereS  + \navSphereY);
}

\newcommand{\navSparBuoy}[3]{
    \edef\navSparY{#1}
    \edef\navSparX{#2}
    \edef\navSparS{#3}

    % Bottom
    \draw (-1.2 * \navSparS + \navSparX, \navSparY) -- (1.2 * \navSparS + \navSparX, \navSparY);

    % Buoy
    % Right side
    \draw[\navBuoyArea] (0.45 * \navSparS + \navSparX, 0.217 * \navSparS + \navSparY) -- (1.8 * \navSparS + \navSparX, 5.5 * \navSparS + \navSparY) --
    % Left side
    (1 * \navSparS + \navSparX, 5.7 * \navSparS + \navSparY) -- (-0.25 * \navSparS + \navSparX, 0.48 * \navSparS + \navSparY) -- cycle;

    \pgfkeys{/markOptions/.cd, x=\navSparX + 1.6 * \navSparS, y=\navSparY + 6.4 * \navSparS}
    \navTopMark
}

\newcommand{\navBarrelBuoy}[3]{
    \edef\navBarrelY{#1}
    \edef\navBarrelX{#2}
    \edef\navBarrelS{#3}

    % Left side
    \draw[\navBuoyArea] (-2 * \navBarrelS + \navBarrelX, \navBarrelY) -- (-1.5 * \navBarrelS + \navBarrelX, \navBarrelY) -- (-1.5 * \navBarrelS + \navBarrelX, 0.75 * \navBarrelS + \navBarrelY) --
    (-1.5 * \navBarrelS + \navBarrelX, 0.75 * \navBarrelS + \navBarrelY) arc[start angle=180, end angle=90, radius=\navBarrelS * 0.75cm] --
    % Right side
    (0.25 * \navBarrelS + \navBarrelX, 1.5 * \navBarrelS + \navBarrelY) --
    (0.25 * \navBarrelS + \navBarrelX, 1.5 * \navBarrelS + \navBarrelY) arc[start angle=90, end angle=0, radius=\navBarrelS * 0.75cm] --
    (1 * \navBarrelS + \navBarrelX, \navBarrelY) -- (1.5 * \navBarrelS + \navBarrelX, \navBarrelY) -- cycle;
}

\newcommand{\navSuperBuoy}[3]{
    \edef\navSuperY{#1}
    \edef\navSuperX{#2}
    \edef\navSuperS{#3}

    % Left side
    \draw[\navBuoyArea] (-2.75 * \navSuperS + \navSuperX, \navSuperY) -- (-2 * \navSuperS + \navSuperX, \navSuperY) -- (-1.6 * \navSuperS + \navSuperX, 1.25 * \navSuperS + \navSuperY) --
    % Right side
    (1.6 * \navSuperS + \navSuperX, 1.25 * \navSuperS + \navSuperY) -- (2 * \navSuperS + \navSuperX, \navSuperY) -- (2.75 * \navSuperS + \navSuperX, \navSuperY) -- cycle;

}

% Arguments: y-Coord, x-Coord, scaling, light color
\newcommand{\navLightedMarkLeft}[4]{
    \edef\navLightY{#1}
    \edef\navLightX{#2}
    \edef\navLightS{#3}

    \draw[#4, fill=#4] (-5 * \navLightS + \navLightX, -3 * \navLightS + \navLightY) --
    (-0.5 * \navLightS + \navLightX, -0.5 * \navLightS + \navLightY) --
    (-3 * \navLightS + \navLightX, -5 * \navLightS + \navLightY) --
    (-3 * \navLightS + \navLightX, -5 * \navLightS + \navLightY) arc[start angle=-45, end angle=-225, radius=\navLightS * 1.4142cm] -- cycle;

}

% Arguments: y-Coord, x-Coord, scaling, light color
\newcommand{\navLightedMarkRight}[4]{
    \edef\navLightY{#1}
    \edef\navLightX{#2}
    \edef\navLightS{#3}

    \draw[#4, fill=#4] (3 * \navLightS + \navLightX, -5 * \navLightS + \navLightY) --
    (0.5 * \navLightS + \navLightX, -0.5 * \navLightS + \navLightY) --
    (5 * \navLightS + \navLightX, -3 * \navLightS + \navLightY) --
    (5 * \navLightS + \navLightX, -3 * \navLightS + \navLightY) arc[start angle=45, end angle=-135, radius=\navLightS * 1.4142cm] -- cycle;

}


% Arguments: y-Coord, x-Coord, scaling
\newcommand{\navLightHouse}[3]{
    \edef\navLightHouseY{#1}
    \edef\navLightHouseX{#2}
    \edef\navLightHouseS{#3}

    \draw[fill] (\navLightHouseX, -0.6 * \navLightHouseS + \navLightHouseY) --
    (0.9 * \navLightHouseS + \navLightHouseX, -1.1 * \navLightHouseS + \navLightHouseY) --
    (0.6 * \navLightHouseS + \navLightHouseX, -0.2 * \navLightHouseS + \navLightHouseY) --
    (1.4 * \navLightHouseS + \navLightHouseX, 0.5 * \navLightHouseS + \navLightHouseY) --
    (0.35 * \navLightHouseS + \navLightHouseX, 0.5 * \navLightHouseS + \navLightHouseY) --
    (\navLightHouseX, 1.5 * \navLightHouseS + \navLightHouseY) --
    (-0.35 * \navLightHouseS + \navLightHouseX, 0.5 * \navLightHouseS + \navLightHouseY) --
    (-1.4 * \navLightHouseS + \navLightHouseX, 0.5 * \navLightHouseS + \navLightHouseY) --
    (-0.6 * \navLightHouseS + \navLightHouseX, -0.2 * \navLightHouseS + \navLightHouseY) --
    (-0.9 * \navLightHouseS + \navLightHouseX, -1.1 * \navLightHouseS + \navLightHouseY) -- cycle;

}


\pgfkeys{
    /LightHouseFire/.is family,
    /LightHouseFire/color/.store in = \navLightHouseFireColor,
    /LightHouseFire/start angle/.store in = \navLightHouseFireStartAngle,
    /LightHouseFire/end angle/.store in = \navLightHouseFireEndAngle,
}

% Arguments: LightHouseFire
\newcommand{\navLightHouseFire}[1]{
    \pgfkeys{/LightHouseFire/.cd, color=black, start angle=0, end angle=90}
    \pgfkeys{/LightHouseFire/.cd, #1}

    % Replace white light color with yellow
    \ifdefstring{\navLightHouseFireColor}{white}{
        \pgfkeys{/LightHouseFire/.cd, color=yellow}
    }

    \edef\navLightHouseFireX{\pgfkeysvalueof{/navSymbolSettings/x}}
    \edef\navLightHouseFireY{\pgfkeysvalueof{/navSymbolSettings/y}}
    \edef\navLightHouseFireS{\pgfkeysvalueof{/navSymbolSettings/scaling}}

    \edef\LightHouseFireAngle{\navLightHouseFireStartAngle}
    \pgfmathsetmacro{\LightHouseFireStartPosX}{\navLightHouseFireX + \navLightHouseFireS * 3 * cos(\LightHouseFireAngle)}
    \pgfmathsetmacro{\LightHouseFireStartPosY}{\navLightHouseFireY + \navLightHouseFireS * 3 * sin(\LightHouseFireAngle)}

    \draw[\navLightHouseFireColor] (\LightHouseFireStartPosX, \LightHouseFireStartPosY) arc[start angle=\navLightHouseFireStartAngle, end angle=\navLightHouseFireEndAngle, radius=\navLightHouseFireS * 3cm];

}


\newcommand{\navTopMark}[0]{
    % Set arguments
    \edef\navTopX{\pgfkeysvalueof{/markOptions/x}}
    \edef\navTopY{\pgfkeysvalueof{/markOptions/y}}
    \edef\navTopS{\pgfkeysvalueof{/markOptions/scaling} * 1.5}
    \edef\navTopSpace{\navTopS * 1.5}

    % Ball/Circle
    \ifdefstring{\navTopMarkings}{circle}{
        \draw[\navTopArea] (0.29 * \navTopS + \navTopX, \navTopS + \navTopY) circle (\navTopS * 0.75);
    }

    % Triangle up
    \ifdefstring{\navTopMarkings}{up}{
        \navTriangleUp{\navTopY}{\navTopX}{\navTopS}
    }

    % Box
    \ifdefstring{\navTopMarkings}{box}{
        \navBox{\navTopY}{\navTopX}{\navTopS}
    }

    % Cardinalmarks
    % North: both point up
    \ifdefstring{\navTopMarkings}{north}{
        % Bottom
        \navTriangleUp{\navTopY}{\navTopX}{\navTopS}

        % Top
        \navPositionNextMark{\navTopY}{\navTopX}
        \navTriangleUp{\navNextMarkY}{\navNextMarkX}{\navTopS}
    }

    % East: both point away from each other
    \ifdefstring{\navTopMarkings}{east}{
        % Bottom
        \navTriangleDown{\navTopY}{\navTopX}{\navTopS}

        % Top
        \navPositionNextMark{\navTopY}{\navTopX}
        \navTriangleUp{\navNextMarkY}{\navNextMarkX}{\navTopS}
    }

    % South: both point down
    \ifdefstring{\navTopMarkings}{south}{
        % Bottom
        \navTriangleDown{\navTopY}{\navTopX}{\navTopS}

        % Top
        \navPositionNextMark{\navTopY}{\navTopX}
        \navTriangleDown{\navNextMarkY}{\navNextMarkX}{\navTopS}
    }

    % West: both point to each other
    \ifdefstring{\navTopMarkings}{west}{
        % Bottom
        \navTriangleUp{\navTopY}{\navTopX}{\navTopS}

        % Top
        \navPositionNextMark{\navTopY}{\navTopX}
        \navTriangleDown{\navNextMarkY}{\navNextMarkX}{\navTopS}
    }
}


% Draw single triangle with relative coordinates
% Triangles: towards center
% Up:
% Left: (-0.87, -0.83) => (-0.58, 0.17)
% Right: (0.28, -1.17) => (0.57, -0.17)
% Offset: (0.29, 1)

% Down:
% Left: (-0.28, 1.17)
% Right: (0.87, 0.83)

% Arguments: y-Coord, x-Coord, scaling
\newcommand{\navTriangleUp}[3]{
    \edef\navTriangleUpY{#1}
    \edef\navTriangleUpX{#2}
    \edef\navTriangleUpScaling{#3}

    \draw[\navTopArea] (-0.58 * \navTriangleUpScaling + \navTriangleUpX, 0.17 * \navTriangleUpScaling + \navTriangleUpY) --
    (0.57 * \navTriangleUpScaling + \navTriangleUpX, -0.17 * \navTriangleUpScaling + \navTriangleUpY) --
    (0.29 * \navTriangleUpScaling + \navTriangleUpX, \navTriangleUpScaling + \navTriangleUpY) -- cycle;
}

% Arguments: y-Coord, x-Coord
\newcommand{\navPositionNextMark}[2]{
    \edef\navNextMarkY{1 * \navTopSpace + #1}
    \edef\navNextMarkX{0.29 * \navTopSpace + #2}
}

% Arguments: y-Coord, x-Coord, scaling
\newcommand{\navTriangleDown}[3]{
    \edef\navTriangleDownY{#1}
    \edef\navTriangleDownX{#2}
    \edef\navTriangleDownScaling{#3}

    \draw[\navTopArea] (-0.28 * \navTriangleDownScaling + \navTriangleDownX, 1.17 * \navTriangleDownScaling + \navTriangleDownY) --
    (0.87 * \navTriangleDownScaling + \navTriangleDownX, 0.83 * \navTriangleDownScaling + \navTriangleDownY) --
    (\navTriangleDownX, \navTriangleDownY) -- cycle;
}


% Box for cylindrical buoy
% Offset: (0.4, 2.15)
% Left Bottom:  (-0.1, 2.2) => (-0.5, 0.05)
% Left Top:     (0.2, 3.5)    => (-0.2, 1.35)
% Right Bottom: (0.9, 2)    => (0.5, -0.15)
% Right Top:    (1.75, 3.25)  => (0.85, 1.1)

% Arguments: y-Coord, x-Coord, scaling
\newcommand{\navBox}[3]{
    \edef\navBoxY{#1}
    \edef\navBoxX{#2}
    \edef\navBoxScaling{#3}

    \draw[\navTopArea] (-0.5 * \navBoxScaling + \navBoxX, 0.05 * \navBoxScaling + \navBoxY) --
    (-0.2 * \navBoxScaling + \navBoxX, 1.35 * \navBoxScaling + \navBoxY) --
    (0.85 * \navBoxScaling + \navBoxX, 1.1 * \navBoxScaling + \navBoxY) --
    (0.5 * \navBoxScaling + \navBoxX, -0.15 * \navBoxScaling + \navBoxY) -- cycle;
}





